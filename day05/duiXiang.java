//面向对象：三个特征：封装，继承，多态。

//以后开发：其实就是找对象使用。没有对象，就创造一个对象

//找对象，建议对象，使用对象，维护对象的关系。
/*
类和对象的关系。

现实生活中的对象：张三 李四
想要描述：提取对象中共性内容，对具体的抽象。
描述时：这些对象的共性有：姓名，年龄，性别，学习Java功能。

映射到Java中，描述就是class定义的类。
具体到对象就是对应Java在堆内存中用new建立实体。

类就是现实生活中事物的描述
对象：就是这类事物，实实在在存在个体。
*/
//需求：描述汽车（颜色，轮胎数），描述事物其实就是在描述事物的属性和行为。

//属性对应是类中变量，行为对应的类中的函数（方法）。
//其实定义类，就是在描述事物，就是在定义属性和行为。属性和行为共同成为类中的成员（成员变量和成员方法）。

class Car
{
	//描述颜色
	String color="红色";
	//描述轮胎数
	int num=4;
	//运行行为。
	void run()
	{
		System.out.println(color+".."+num);
	}
}
class duiXiang
{
	public static void main(String[] args) 
	{
		System.out.println("Hello World!");
		//生产汽车，在Java中通过new操作符来完成。
		//其实就是在堆内存产生一个实体。
		Car c=new Car();//这时c就是一个类类型变量。记住：类类型变量指向对象（实体）。
		//将已有的车改成蓝色，指挥该对象做使用。在Java指挥方式是：对象.对象成员
		c.color="blue";
		c.run();//结果是blue 4
		Car c1=new Car();//产生一个新对象，叫c1（这个对象没有因为上面一个对象而改变其中类中的变量）
		c1.run();//结果是红色 4（注意这里的颜色是红色   而不是blue）
		
//匿名对象使用方式一：当对象的方法只调用一次时，可以用匿名对象完成，这样写比较简化。
//如果对一个对象进行多个成员调用时，必须给这个对象起个名字。
//匿名对象使用方式二：可以将匿名对象作为实际参数进行传递。

		new Car().num=5;//（用的是匿名对象）等价于：Car c=new Car();c.num=5
	
	Car cc=new Car();//创建一个对象
	show(cc);//调用函数//56,57也可以这样写：show(new Car);//匿名对象可以作为实际参数进行传递
	
	}
	public static void show(Car c)
	{
		c.num=3;
		c.color="black";
		c.run();
	}
}
