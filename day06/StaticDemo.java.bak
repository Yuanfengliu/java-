/*
静态：static
用法：是一个修饰符，用于修饰成员（成员变量，成员函数）。
当成员被静态修饰后，就多了一个调用方式，除了可以被对象调用外，
还可以直接被类名调用。类名.静态成员。

static特点：
1：随着类的加载而加载。
	也就是说：静态会随着类的消失而消失。说明它的生命周期最长。
2：优先于的对象存在
明确一点：静态是优先存在的，对象是后存在的。

3：被所有对象所共享
4：可以直接被类名所调用。

实例变量和类变量的区别：
1，存放位置
	类变量随着类的加载而存在于方法区中。
	实例变量随着对象的建立而存在于堆内存中。
2，生命周期：
	类变量的生命周期最长，随着类的消失而消失。
	实例变量生命周期随着对象的消失而消失。

静态的使用注意事项：

*/

class Person
{
	String name;//成员变量，实例变量
	static String country="CN";//静态的成员变量，类变量.对象不在，也可以调用。
	public static void show()
	{
		System.out.println("::"+country);
	}
}

class  StaticDemo
{
	public static void main(String[] args) 
	{
		//System.out.println("Hello World!");
		//Person p=new Person();
		//p.name="zhangsan";
		//p.show();

		//System.out.println(p.country);//这两种调用方式一样
		System.out.println(Person.country);//这两种调用方式一样
		Person.show();//注意show函数中，不能有非静态变量name。因为无法从静态上引用非静态变量
	}
}
